<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd		
		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->


	<!-- Enables the Spring MVC @Controller programming model -->


	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->


	<resources location="/resources/" mapping="/resources/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="1">
		<beans:property value="/WEB-INF/views/" name="prefix" />
		<beans:property value=".jsp" name="suffix" />
	</beans:bean>

	<context:component-scan
		base-package="com.spring" />


	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		name="dataSource" id="dataSource">
		
		<beans:property value="org.mariadb.jdbc.Driver"
			name="driverClassName" />

		<beans:property
			value="jdbc:mariadb://dusdjland.cafe24.com:3306/dusdjland" name="url" />

		<beans:property value="dusdjland" name="username" />

		<beans:property value="admin1q2w3e4r!@" name="password" />

	</beans:bean>

	<!-- 트랜젝션 매니저 -->
   <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <beans:property name="dataSource" ref="dataSource" />
   </beans:bean>
	
	<!-- @Transactional 애노테이션을 scan하기 위한 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />


	<beans:bean
		class="org.springframework.jdbc.core.JdbcTemplate" name="template">

		<beans:property name="dataSource" ref="dataSource" />

	</beans:bean>


	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">

		<beans:property name="dataSource" ref="dataSource" />

		<beans:property
			value="classpath:com/spring/mapper/*.xml" name="mapperLocations" />

	</beans:bean>

	<beans:bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSession">

		<beans:constructor-arg ref="sqlSessionFactory"
			index="0" />

	</beans:bean>
	<interceptors>
		<beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0" />
			<beans:property name="useExpiresHeader" value="true" />
			<beans:property name="useCacheControlHeader"
				value="true" />
			<beans:property name="useCacheControlNoStore"
				value="true" />
			<beans:property name="cacheMappings">
				<beans:props>
					<beans:prop key="/ormEx/login">86400</beans:prop>
				</beans:props>
			</beans:property>
		</beans:bean>
	</interceptors>
	
	

	
</beans:beans>